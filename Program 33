//Program 0
//Basic to accept elements and display

#include <stdio.h>
#include <stdlib.h>

struct node
{
    int data;
    struct node *link;
};

struct node*Append(struct node*ptr,int data);
void DisplayLL(struct node*ptr);
struct node* reverse(struct node* head);

int main()
{
    int num,n;
    struct node*head;
    struct node*ptr;
    
    printf("Enter number of nodes");
    scanf("%d",&n);
    
    //Creating first node
    head=(struct node*)malloc(sizeof(struct node));
    printf("Enter value to add to the list: ");
    scanf("%d",&num);
    head->data=num;
    head->link=NULL;
    
    //Creating remaining nodes
    ptr=head;
    for (int i=0;i<n-1;i++)
    {
        printf("Enter value to add to the list: ");
        scanf("%d",&num);
        ptr=Append(ptr,num);
    }
    
    //Display
    ptr=head;
    printf("Here is the list\n");
    DisplayLL(ptr);
    
    //Reverse
    head=reverse(head);
    ptr=head;
    
    printf("Here is the list after reversing\n");
    DisplayLL(ptr);
    
}

//Adding element to the list
struct node* Append(struct node*ptr,int data)
{
    struct node *temp = malloc(sizeof(struct node));
    temp->data=data;
    temp->link=NULL;
    
    ptr->link =temp;
    return temp;
}

//Displaying the list
void DisplayLL(struct node*ptr)
{
    while (ptr!=NULL)
    {
        printf("%d\t",ptr->data);
        ptr=ptr->link;
    }
    printf("\n");
}

//Reversing function
struct node* reverse(struct node* head)
{
    struct node *prev=NULL;
    struct node *next=NULL;
    while (head!=NULL)
    {
        next=head->link;
        head->link=prev;
        prev=head;
        head=next;
    }
    head=prev;
    return head;
}
