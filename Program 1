//Program 1
//Removing nodes having duplicate information

#include <stdio.h>
#include <stdlib.h>

struct node
{
    int data;
    struct node *link;
};

struct node*Append(struct node*ptr,int data);
void DisplayLL(struct node*ptr);
void RemoveDuplicates(struct node*ptr);

int main()
{
    int num,n;
    struct node*head;
    struct node*ptr;
    
    printf("Enter number of nodes");
    scanf("%d",&n);
    
    //Creating first node
    head=(struct node*)malloc(sizeof(struct node));
    printf("Enter value to add to the list: ");
    scanf("%d",&num);
    head->data=num;
    head->link=NULL;
    
    //Creating remaining nodes
    ptr=head;
    for (int i=0;i<n-1;i++)
    {
        printf("Enter value to add to the list: ");
        scanf("%d",&num);
        ptr=Append(ptr,num);
    }
    
    ptr=head;
    printf("Here is the initial linked list\n");
    DisplayLL(ptr);
    
    //Removing duplicates
    ptr=head;
    RemoveDup(head);
    
    //Display final
    ptr=head;
    printf("Here is the final linked list\n");
    DisplayLL(ptr);
    
}

//Adding element to the list
struct node* Append(struct node*ptr,int data)
{
    struct node *temp = malloc(sizeof(struct node));
    temp->data=data;
    temp->link=NULL;
    
    ptr->link =temp;
    return temp;
}

//Displaying the list
void DisplayLL(struct node*ptr)
{
    while (ptr!=NULL)
    {
        printf("%d\t",ptr->data);
        ptr=ptr->link;
    }
    printf("\n");
}

void RemoveDup(struct node *head) 
{
  struct node *ptr1 = head;
  while (ptr1 != NULL) 
  {
    struct node *ptr2 = ptr1;
    while (ptr2->link != NULL) 
    {
      if (ptr2->link->data == ptr1->data) 
        ptr2->link = ptr2->link->link;
      else
        ptr2 = ptr2->link;
    }
    ptr1 = ptr1->link;
  }
}
